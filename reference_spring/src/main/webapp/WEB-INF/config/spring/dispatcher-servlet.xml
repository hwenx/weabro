<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
								http://www.springframework.org/schema/mvc/spring-mvc.xsd
								http://www.springframework.org/schema/beans 
								http://www.springframework.org/schema/beans/spring-beans.xsd
								http://www.springframework.org/schema/jee 
								http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
								http://www.springframework.org/schema/context 
								http://www.springframework.org/schema/context/spring-context.xsd
								http://www.springframework.org/schema/websocket 
								http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	
	<!-- Enables MVC model -->
	<mvc:annotation-driven />
	
<!--    
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
    	MessageConverter 설정	
		<property name="messageConverters">
			<list>
				<ref bean="jsonMessageConverter" />
			</list>
		</property>
    </bean>
	
    Configure bean to convert JSON to POJO and vice versa
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/> -->

	
<!-- 	<context:component-scan base-package="com.jechue.spring.sample.admin.controller"/>
	<context:component-scan base-package="com.jechue.spring.sample.admin.mapper"/>
	<context:component-scan base-package="com.jechue.spring.sample.admin.service"/>
	<context:component-scan base-package="com.jechue.spring.sample.admin.service.impl"/> -->
	
 	<context:component-scan base-package="com.jechue.spring" use-default-filters="false">
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Repository"/>
	</context:component-scan>

	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- dispatcher-servlet으로 들어온 요청을 컨트롤러가 찾지 못하면 2차적으로 아래 설정경로로 검색 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- Interceptor Handler -->
	<!-- interceptor는 controller가 요청되기전에 수행되어야 하기 때문에 DispatcherServlet과 같은 위치에 있어야 정상 작동함 -->
	<!-- 따로 분리하여 만들고 싶으면 web.xml에서 DispatcherServlet과 같이 호출되게 설정하면, 따로만든 xml을 DispatcherServlet과 같은 위치에 있게 한다. -->
<!-- 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean id="loggerInterceptor" class="com.jechue.spring.sample.admin.common.LoggerInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
	
	<!-- Websocket Handler -->


	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	

	
</beans>
